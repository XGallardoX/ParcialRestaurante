package modelo;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class UsuarioDAO {
    private static UsuarioDAO instancia;
    private List<Usuario> usuarios = new ArrayList<>();
    private static final String ARCHIVO_USUARIOS = "data/usuarios.txt";

    // Constructor privado
    private UsuarioDAO() {
        cargarUsuarios();  // Al crear el DAO, cargamos los usuarios desde el archivo
    }

    // Obtener instancia del DAO (Singleton)
    public static UsuarioDAO getInstancia() {
        if (instancia == null) {
            instancia = new UsuarioDAO();
        }
        return instancia;
    }

    // Agregar un usuario a la lista y guardarlo en el archivo
    public void agregarUsuario(Usuario usuario) {
        usuarios.add(usuario);
        guardarUsuarios();  // Guardamos los usuarios cada vez que se agrega uno nuevo
    }

    // Buscar un usuario por correo
    public Usuario buscarPorCorreo(String correo) {
        for (Usuario u : usuarios) {
            if (u.getCorreo().equalsIgnoreCase(correo)) {
                return u;
            }
        }
        return null;
    }

    // Cargar usuarios desde el archivo
    public void cargarUsuarios() {
        File archivo = new File(ARCHIVO_USUARIOS);
        if (archivo.exists()) {
            try (BufferedReader br = new BufferedReader(new FileReader(archivo))) {
                String linea;
                while ((linea = br.readLine()) != null) {
                    String[] datos = linea.split(",");
                    if (datos.length == 5) {
                        int idUsuario = Integer.parseInt(datos[0]);
                        String nombre = datos[1];
                        String correo = datos[2];
                        String contrasena = datos[3];
                        String rol = datos[4];
                        Usuario usuario = new Usuario(idUsuario, nombre, correo, contrasena, rol);
                        usuarios.add(usuario);
                    }
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    // Guardar usuarios en el archivo
    public void guardarUsuarios() {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(ARCHIVO_USUARIOS))) {
            for (Usuario usuario : usuarios) {
                bw.write(usuario.getIdUsuario() + "," + usuario.getNombre() + "," + usuario.getCorreo() + ","
                        + usuario.getContrasena() + "," + usuario.getRol());
                bw.newLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
