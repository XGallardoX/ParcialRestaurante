package vista;

import controlador.ReservaController;
import modelo.Reserva;
import modelo.Usuario;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.List;

public class VistaReserva extends JFrame {
    private ReservaController reservaController;
    private Usuario usuario;

    public VistaReserva(Usuario usuario) {
        this.usuario = usuario;
        reservaController = new ReservaController();
        
        setTitle("Reservas");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        // Crear los componentes de la ventana
        JButton hacerReservaButton = new JButton("Hacer Reserva");
        JButton verReservasButton = new JButton("Ver Mis Reservas");
        JButton logoutButton = new JButton("Cerrar Sesión");

        // Layout
        setLayout(new GridLayout(3, 1));
        add(hacerReservaButton);
        add(verReservasButton);
        add(logoutButton);

        // Acción de hacer reserva
        hacerReservaButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                hacerReserva();
            }
        });

        // Acción de ver reservas
        verReservasButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                verReservas();
            }
        });

        // Acción de cerrar sesión
        logoutButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
                new VistaLogin().setVisible(true);  // Volver a la pantalla de login
            }
        });
    }

    // Método para hacer una nueva reserva
    private void hacerReserva() {
        while (true) {
            try {
                String idMesaStr = JOptionPane.showInputDialog(this, "Introduce el ID de la mesa:");
                if (idMesaStr == null) return;  // Si cancela, salir

                int idMesa = Integer.parseInt(idMesaStr);

                String fechaStr = JOptionPane.showInputDialog(this, "Introduce la fecha de la reserva (MM-DD):");
                if (fechaStr == null) return;

                String horaStr = JOptionPane.showInputDialog(this, "Introduce la hora de la reserva (HH:MM):");
                if (horaStr == null) return;

                // Año actual + fecha ingresada
                int anioActual = LocalDate.now().getYear();
                LocalDate fecha = LocalDate.parse(anioActual + "-" + fechaStr);
                LocalTime hora = LocalTime.parse(horaStr);

                // Validaciones
                LocalDate hoy = LocalDate.now();
                LocalTime horaActual = LocalTime.now();

                if (fecha.isBefore(hoy) || (fecha.isEqual(hoy) && hora.isBefore(horaActual))) {
                    JOptionPane.showMessageDialog(this, "No puedes reservar en el pasado. Intenta de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
                    continue;  // Vuelve a pedir los datos
                }

                // Si todo es correcto, hacemos la reserva
                reservaController.hacerReserva(usuario.getIdUsuario(), idMesa, fecha, hora);
                JOptionPane.showMessageDialog(this, "Reserva realizada con éxito.");
                break;  // Salimos del bucle porque ya hizo la reserva

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Datos inválidos. Por favor ingresa la información correctamente.", "Error", JOptionPane.ERROR_MESSAGE);
                // Y vuelve a preguntar automáticamente
            }
        }
    }



    // Método para ver las reservas de un usuario
    private void verReservas() {
        List<Reserva> reservas = reservaController.verReservasUsuario(usuario.getIdUsuario());

        StringBuilder reservasText = new StringBuilder("Mis Reservas:\n");
        for (Reserva reserva : reservas) {
            reservasText.append("Mesa: ").append(reserva.getIdMesa())
                        .append(", Fecha: ").append(reserva.getFecha())
                        .append(", Hora: ").append(reserva.getHora())
                        .append(", Estado: ").append(reserva.getEstado())
                        .append("\n");
        }

        JOptionPane.showMessageDialog(this, reservasText.toString());
    }
}
